{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-24T10:41:56.704Z",
    "end": "2021-05-24T10:42:05.155Z",
    "duration": 8451,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fac5004c-0465-4dbc-b202-cea5c7dd5ad8",
      "title": "",
      "fullFile": "cypress\\integration\\ecare_poc.js",
      "file": "cypress\\integration\\ecare_poc.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16bef598-7ee1-4659-952c-5c4835b34ab9",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Administering vaccine via adding a new patient profile",
              "fullTitle": "Actions Administering vaccine via adding a new patient profile",
              "timedOut": null,
              "duration": 5952,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture('TestData/TestData.json').then(function (testData) {\n  //Step-1. Enter User Email ID\n  loginPage.enterEmailAddress(testData.LoginUserName); //Step-1. Enter User Password\n  loginPage.enterPassword(testData.Password);\n  loginPage.clickSignInBtn();\n  homePage.ClickAddPatientUnderGearIcon();\n  var firstname = testData.PatientFirstName + Math.floor(Math.random() * 100000);\n  var lastname = testData.PatientLastName + Math.floor(Math.random() * 100000);\n  addPatient.fillPatientDetails(firstname, lastname, testData.Address, testData.City, testData.State, testData.ZIP);\n  addPatient.fillPatientContactAndClickAddButton(); //Instead of validating Green Toaster. We verified Created Patient Firstname & Lastname on Patient Page\n  //Technical Reason: Since the Green Toaster created on old DOM & as soon as we click OK new DOM gets loaded \n  //(i.e) New page navigated. So we took this approach\n  addPatient.validateCreatedPatient(firstname, lastname);\n  patientDetailsPage.ClickMedicationTab();\n  patientDetailsPage.ClickPatientReportedMedicationTab();\n  patientDetailsPage.addnewMedicationForPatient(); //We validated Green Toaster - On this instance entire DOM is not refreshed & navigate to different page\n  //So, we validated short burst message\n  patientDetailsPage.validateAddedMedicationSuccessMessage();\n  patientDetailsPage.ClickeCarePlansTab();\n  patientDetailsPage.ClickeCarePlanUnderAddEncounter();\n  patientDetailsPage.filleCarePlan_NewEncounter_OverviewDetails();\n  patientDetailsPage.filleCarePlan_NewEncounter_PatientDetails();\n  patientDetailsPage.filleCarePlan_NewEncounter_Insurance_AddNewPlan_Details();\n  patientDetailsPage.filleCarePlan_NewEncounter_MedicalHistory_AddCondition_Details();\n  patientDetailsPage.filleCarePlan_NewEncounter_MedicationDetails();\n  patientDetailsPage.filleCarePlan_NewEncounter_GoalsDetails();\n  patientDetailsPage.completeEncounter(); //Added validation for existence of \"re-open\" button which verifies the successful completion of eCare Goal/Plan\n  patientDetailsPage.validateeCareCompleted();\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name='UserNames']`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `input[name='UserNames']`, but never found it.\n    at Context.eval (https://beta-account.prescribewellness.com/__cypress/tests?p=cypress\\integration\\ecare_poc.js:509:12)",
                "diff": null
              },
              "uuid": "e5fb4967-ad5a-4bc6-96b6-aff634499b68",
              "parentUUID": "16bef598-7ee1-4659-952c-5c4835b34ab9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e5fb4967-ad5a-4bc6-96b6-aff634499b68"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5952,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "TabulaRasaExecutionReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results/mochawesome-report",
        "overwrite": false,
        "reportFilename": "TabulaRasaExecutionReport",
        "html": true,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}